name: Build and Deploy

on: workflow_dispatch

jobs:
  build-server:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/echo8/pastesphere:latest
          file: Dockerfile.server
  
  deploy-server:
    runs-on: ubuntu-latest
    needs: build-server
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/pastesphere.key
          chmod 600 ~/.ssh/pastesphere.key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/pastesphere.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Pull latest server image
        run: ssh prod 'docker pull ghcr.io/echo8/pastesphere:latest'
      
      - name: Stop server container
        run: ssh prod 'docker stop pastesphere && docker rm pastesphere'
      
      - name: Start server container with latest image
        run: ssh prod "docker run --name pastesphere -d -p 443:443 -v /home/$SSH_USER/data:/data -v /home/$SSH_USER/certs:/certs -e COOKIE_SECRET=$COOKIE_SECRET ghcr.io/echo8/pastesphere:latest"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  
  build-deploy-client:
    runs-on: ubuntu-latest
    needs: deploy-server
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build client
        run: npm run build:client
      
      # - name: Deploy client
      #   uses: cloudflare/wrangler-action@v3
      #   with:
      #     apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     command: pages deploy src/client/dist --project-name=pastesphere
